ALGORITHM: The instructions explaining how to solve a problem, like a recipe or navigation. In computer science, algorithms tell computers how to calculate or process information using ordered directions in a language they can read. For example, a search engine uses an algorithm to take the input (the search terms) and return results.

APPLICATION PROGRAMMING INTERFACE (API): Code that acts as a broker to let different web applications exchange information with one another. Users typically send a request to the API for data on its server, which it sends back, usually as a JSON object. For example, The New York Times Archive APIExternal link:open_in_new will return a database of every article for a given month since 1851.

BUG: An error in the code that causes a program to crash or return the incorrect output. “Debugging” is the process of finding and correcting mistakes.

CALL: To set a programming function in motion and ask it to execute. A function is defined and then “called” later via text to have it run.

COMMAND: A direction users send to the computer through a programming interface, called a “shell.” Commands are typed into the “command line.”

DATA: Information stored or processed by a computer. All digital data exists in binary digits, a system of zeros and ones that computers can read.

GITHUB: An open-source software sharing system based on Git, which manages the revision history of a program.

ITERATION: Sometimes programs are repeated indefinitely or until a specific outcome is reached. Each execution of the instructions is an “iteration.”

LANGUAGE: The method of communicating with the computer using a specific vocabulary, grammar, and structure. Python, C++ and HTML are examples of different languages. Those are translated into binary digits, or bits, that the computer can read.

OBJECT-ORIENTED PROGRAMMING (OOP): A style of programming centered around treating the code as sections of data, or “objects.” Users define the objects and use them as entities while continuing to write the program. OOP can help developers design and navigate large, complex programs.

PROGRAMMING: Designing, writing, and debugging computer programs that can complete a process or solve a problem.

SOURCE CODE: The set of code or instructions a programmer wrote to create a webpage, application, or software. Viewing the source code shows a user the skeleton of an application.

SYNTAX: Similar to the grammar rules of any spoken language, syntax is the rules of a programming language that determine how it should be written.

TERMINAL: A text-based interface to send commands to the computer.

UX (USER EXPERIENCE): A qualitative measurement of how a user interacts with a web page, application or software. Coders should consider the end user at all times when creating a product.

Back to top
Languages

C++: (pronounced “C plus plus”) An object-oriented language developed from its predecessor, C, that is more complex to learn. One of the main components of C++ is the user’s control over the computer’s resources, which makes it a popular language for game design and complex graphics.

CSS: (Cascading Style Sheet) Defines the format and layout of elements on a webpage, such as font and color. A single stylesheet can be referenced by multiple HTML files and standardize the style of all the pages on a website.

HTML: (Hypertext Markup Language) The standard language for creating web pages. It uses a system of tags to define static elements like images and text.

JAVA: An object-oriented language similar to C++ used to develop web applications. Java is concurrent (can run multiple programs at once) and can run on all Java-enabled platforms without editing. Its security makes Java popular in the finance and e-commerce industries.

JAVASCRIPT: An object-oriented language used to create interactivity and define the behavior of elements created in HTML. Some examples of JavaScript are animation, fill-in-the-blank spaces, and buttons.

JSON: (JavaScript Object Notation) A Java-based file format that transmits data in a readable format. Data can be converted to and from JavaScript using JSON.

PYTHON: A multi-purpose language often used for creating web applications and data scraping or analysis. Python uses a simple syntax similar to the English language, and code can be executed immediately.

RUBY: An object-oriented language designed to be readable for people familiar with any programming language. Its flexibility and simplicity make it a popular choice for coders of all skill levels.

SCRATCH: An online tool and visual programming language using a building-block approach to help teach children to code.

SQL: (Structured Query Language) Sometimes pronounced “sequel,” this is a relational database management and data manipulation language. It can be used to update table structure, add or delete data, retrieve specific snapshots of data, and more.

VISUAL OR BLOCK CODING: Any language where users manipulate code via graphics instead of text. It’s often used as an introductory tool or to help teach children as it does not have many real-world development applications.

Back to top
Coding StructureBack to Top

ARGUMENT: The value supplied to a function or procedure when it is called, or what you want the function to use to finish the directions. If the function is f(x) = 2x and the user calls f(3), 3 is the argument you want the function to use.

ARRAY: A set or series of objects that are all the same type of data. For example, an array could consist entirely of integers (10, 20, 30, 40) or characters (a, b, c, d). It’s a data storage and access method that is quicker than defining a variable for every single value.

BINARY: A two-symbol or two-choice system. A computer’s native language is binary and uses only 1’s and 0’s. For example, the character “A” translated to binary is 01000001. Raw code, or the language the computer reads, is in binary.

BOOLEAN: A system of logic based on a binary variable of TRUE (1) or NOT TRUE (0) result. In coding, users can use Boolean data values to compare variables and execute different outcomes based on the result.

CHAR: A variable type that is an abbreviation for “character.” Any single character (3, x, $) meets this definition.

CLASS: Used in object-oriented programming, a class can be thought of as a category where objects who share characteristics reside. Users define a class to create a template for the variables and data that it contains.

CONDITIONAL STATEMENT: A direction that is dependent on the value of a predetermined value or “condition.” It tells the computer “If x is TRUE, do this. If x is NOT TRUE, do that.”

FLOAT: A variable that extends beyond the decimal point. While an integer is a whole number, floats are fractional (ex. 1.6578).

FUNCTION: A named procedure that can be created, defined, called, and reused by a programmer. There are built-in and user-defined functions, so users can access existing functions from a languages library or create their own. For example, you can create a function that would square a value and add 11 called “square11.” You could execute the function over and over again with different values to find the answer each time.

INTEGER: A whole number that can be positive, negative or zero.

LOOP: A set of directions that is automatically repeated until a specific condition is met. It can run a predetermined number of times, while a variable remains TRUE, indefinitely, or for another specified span.

NESTED: Functions or objects that are contained within another function or object. So, a function that exists entirely inside the directions of a separate function is nested.

OBJECTS: The basis of object-oriented programming, these are segments of code or data that can be referenced while programming. 